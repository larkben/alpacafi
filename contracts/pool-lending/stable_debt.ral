import "std/nft_interface"

Contract Debt (
    debtor: Address,
    loanAmount: U256,
    collateralAmount: U256,
    timeCreated: U256,
    interestRate: U256,
    parentContract: Address
) {
    pub fn getLoanAmount() -> U256 {
        return loanAmount
    }

    pub fn getCollateralAmount() -> U256 {
        return collateralAmount
    }

    pub fn getDebtor() -> Address {
        return debtor
    }

    pub fn getParentAddress() -> Address {
        return parentContract
    }

    pub fn calculateRepayment() -> (U256) {
        // Calculate elapsed time
        let elapsedTime = blockTimeStamp!() - timeCreated
    
        // Avoid integer truncation: multiply first, then divide
        let gain = (loanAmount * interestRate * elapsedTime) / (31556926000 * 10000)
    
        // Return the original amount + accrued interest + flat interest
        return loanAmount + gain
    }

    @using(checkExternalCaller = true, assetsInContract = true)
    pub fn destroyDebt(caller: Address) -> () {
        checkCaller!(callerAddress!() == parentContract, 0)

        destroySelf!(caller)
    }
}