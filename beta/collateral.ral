import "std/nft_interface"

Contract CollateralAccountNFT (
    nftIndex: U256,
    tokenUri: ByteVec,
    collectionId: ByteVec
) implements INFT {
      
    pub fn getTokenUri() -> ByteVec {
        return tokenUri
    }
      
    pub fn getNFTIndex() -> U256 {
        return nftIndex
    }
      
    pub fn getCollectionIndex() -> (ByteVec, U256) {
        return collectionId, nftIndex
    }

    pub fn removeAssetViaParent(caller: Address, token: ByteVec, amount: U256) -> () {
        checkCaller!(contractIdToAddress!(collectionId) == callerAddress!(), 0)

        transferToken!(caller, caller, selfContractId!(), 1) // transfer token to self
    }

    pub fn removeAssetViaNFT() -> () {

    }

    pub fn addAssetViaParent(caller: Address, token: ByteVec, amount: U256) -> () {
        checkCaller!(contractIdToAddress!(collectionId) == callerAddress!(), 0)

        transferToken!(caller, caller, selfContractId!(), 1) // transfer token to self
    }

    pub fn removeAssetViaNFT() -> () {

    }

    pub fn destoryViaParent(caller: Address) -> () {
        checkCaller!(contractIdToAddress!(collectionId) == callerAddress!(), 0)

        burnToken!

        destroySelf!(caller)
    }

    pub fn destroyViaNFT -> () {
        
    }
}